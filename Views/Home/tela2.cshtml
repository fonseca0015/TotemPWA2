@{
    ViewData["Title"] = "Resumo do Pedido"; // Um título mais descritivo
    Layout = null; // Removendo o layout padrão para controle total do CSS
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/stylePagina3.css">
    <title>Resumo do Pedido</title>
</head>
<body>
    <div class="wrapper">
        <div class="header"></div>

        <div class="acoes-topo">
            <a class="voltar" href="@Url.Action("Menu", "Home")">&larr;</a>
            <button class="cupom-button" onclick="abrirModalCupom()">INSIRA AQUI SEU CUPOM!</button>
        </div>

        <div class="secao" id="cart-items-container">
            <!-- Os itens do carrinho serão renderizados aqui pelo JavaScript -->
        </div>

        <div class="rodape">
            <div class="barraContainer">
                <div class="barraPreenchida"></div>
            </div>
            <div class="rodape-info">
                <p>Total de itens: <span id="total-items-footer">0</span></p>
                <p>Total do pedido: <span id="total-price-footer" style="color: #42B61F; font-weight: bold; text-decoration: underline">R$ 0,00</span></p>
            </div>
            <div class="rodape-acoes">
                <a class="btn-cancelar" href="@Url.Action("Menu", "Home")">Cancelar pedido</a>
                <a class="btn-confirmar" href="@Url.Action("Tela3", "Home")">Confirmar pedido</a> 
            </div>
        </div>
    </div>

    <div class="modal-overlay" id="modalPersonalizar">
        <div class="modal-content">
            <button class="modal-close" onclick="fecharModalPersonalizar()">&times;</button>
            <h3 id="tituloModalPersonalizar"></h3>

            <div class="modal-group">
                <strong>Hambúrguer (até 3):</strong>
                <div class="modal-item-quantidade">
                    <span class="label-item">Hambúrguer</span>
                    <div>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('hamburguer', -1)">-</button>
                        <span class="quantidade-valor" id="qtdHamburguer">1</span>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('hamburguer', 1)">+</button>
                    </div>
                </div>
            </div>

            <div class="modal-group">
                <strong>Adicionais:</strong>
                <div class="modal-item-quantidade">
                    <span class="label-item">Queijo adicional</span>
                    <div>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('queijo', -1)">-</button>
                        <span class="quantidade-valor" id="qtdQueijo">0</span>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('queijo', 1)">+</button>
                    </div>
                </div>
                <div class="modal-item-quantidade" style="margin-top: 10px;">
                    <span class="label-item">Bacon</span>
                    <div>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('bacon', -1)">-</button>
                        <span class="quantidade-valor" id="qtdBacon">0</span>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('bacon', 1)">+</button>
                    </div>
                </div>
                <div class="modal-item-quantidade" style="margin-top: 10px;">
                    <span class="label-item">Tomate</span>
                    <div>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('tomate', -1)">-</button>
                        <span class="quantidade-valor" id="qtdTomate">0</span>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('tomate', 1)">+</button>
                    </div>
                </div>
                <div class="modal-item-quantidade" style="margin-top: 10px;">
                    <span class="label-item">Alface</span>
                    <div>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('alface', -1)">-</button>
                        <span class="quantidade-valor" id="qtdAlface">0</span>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('alface', 1)">+</button>
                    </div>
                </div>
                <div class="modal-item-quantidade" style="margin-top: 10px;">
                    <span class="label-item">Cebola roxa</span>
                    <div>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('cebola', -1)">-</button>
                        <span class="quantidade-valor" id="qtdCebola">0</span>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('cebola', 1)">+</button>
                    </div>
                </div>
                <div class="modal-item-quantidade" style="margin-top: 10px;">
                    <span class="label-item">Catupiry</span>
                    <div>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('catupiry', -1)">-</button>
                        <span class="quantidade-valor" id="qtdCatupiry">0</span>
                        <button class="btn-quantidade-modal" onclick="alterarQtdExtra('catupiry', 1)">+</button>
                    </div>
                </div>
            </div>

            <button class="modal-adicionar" onclick="salvarPersonalizacao()">Salvar</button>
        </div>
    </div>

    <div class="modal-overlay" id="modalCupom">
        <div class="modal-content">
            <button class="modal-close" onclick="fecharModalCupom()">&times;</button>
            <h3>Insira seu Código de Cupom</h3>
            <input type="text" id="cupomInput" readonly placeholder="Digite o cupom">

            <div class="keyboard">
                <button onclick="digitarCupom('1')">1</button>
                <button onclick="digitarCupom('2')">2</button>
                <button onclick="digitarCupom('3')">3</button>
                <button onclick="digitarCupom('4')">4</button>
                <button onclick="digitarCupom('5')">5</button>
                <button onclick="digitarCupom('6')">6</button>
                <button onclick="digitarCupom('7')">7</button>
                <button onclick="digitarCupom('8')">8</button>
                <button onclick="digitarCupom('9')">9</button>
                <button onclick="digitarCupom('0')">0</button>
                <button onclick="digitarCupom('DEL')">DEL</button>
                <button class="long-button" onclick="aplicarCupom()">APLICAR CUPOM</button>
            </div>
        </div>
    </div>

    <script>
        let currentEditingIndex = -1; // Variável para rastrear o item que está sendo editado

        document.addEventListener('DOMContentLoaded', () => {
            renderCart();
        });

        function getCart() {
            return JSON.parse(sessionStorage.getItem('cart')) || [];
        }

        function saveCart(cart) {
            sessionStorage.setItem('cart', JSON.stringify(cart));
            renderCart();
        }

        function renderCart() {
            const cart = getCart();
            const container = document.getElementById('cart-items-container');
            container.innerHTML = '<h2>SEU CARRINHO</h2>';

            if (cart.length === 0) {
                container.innerHTML += '<p>Seu carrinho está vazio.</p>';
            } else {
                cart.forEach((item, index) => {
                    const itemTotal = item.price * item.quantity;
                    const itemHtml = `
                        <div class="card-item">
                            <div class="card-info">
                                <img src="${item.image}" alt="${item.name}" class="lanchesFotos">
                                <div class="card-texto">
                                    <h4>${item.name}</h4>
                                    <p>${item.description}</p>
                                     <div class="cart-item-actions">
                                        <button class="personalizar-item-btn" onclick="abrirModalPersonalizar(${index})">Personalizar</button>
                                        <button class="remover-item-btn" onclick="removeItem(${index})">Remover</button>
                                     </div>
                                </div>
                            </div>
                            <div>
                                <p class="card-preco">${itemTotal.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}</p>
                                <div class="quantidade-controle">
                                    <button class="btn-quantidade" onclick="changeQuantity(${index}, -1)">-</button>
                                    <span class="quantidade">${item.quantity}</span>
                                    <button class="btn-quantidade" onclick="changeQuantity(${index}, 1)">+</button>
                                </div>
                            </div>
                        </div>
                    `;
                    container.innerHTML += itemHtml;
                });
            }
            updateTotals();
        }

        function changeQuantity(index, amount) {
            let cart = getCart();
            if (cart[index]) {
                cart[index].quantity += amount;
                if (cart[index].quantity <= 0) {
                    cart.splice(index, 1); // Remove o item se a quantidade for 0 ou menor
                }
            }
            saveCart(cart);
        }

        function removeItem(index) {
            let cart = getCart();
            cart.splice(index, 1);
            saveCart(cart);
        }

        function updateTotals() {
            const cart = getCart();
            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

            document.getElementById('total-items-footer').innerText = totalItems;
            document.getElementById('total-price-footer').innerText = totalPrice.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });

            // Atualiza o total no sessionStorage para ser usado em outras páginas
            sessionStorage.setItem('cartTotal', totalPrice);
        }

        // Objeto para armazenar as quantidades dos ingredientes do modal atual
        let ingredientesPersonalizados = {};

        // Função para abrir o modal de personalização
        function abrirModalPersonalizar(index) {
            currentEditingIndex = index;
            const cart = getCart();
            const item = cart[index];

            if (!item) return;

            document.getElementById('tituloModalPersonalizar').innerText = 'Personalizar ' + item.name;
            
            // Carrega as personalizações atuais do item para o estado do modal
            ingredientesPersonalizados = JSON.parse(JSON.stringify(item.customizations));
            
            atualizarDisplayIngredientes();
            document.getElementById('modalPersonalizar').style.display = 'flex';
        }

        // Função para fechar o modal de personalização
        function fecharModalPersonalizar() {
            document.getElementById('modalPersonalizar').style.display = 'none';
            currentEditingIndex = -1; // Limpa o índice ao fechar
        }

        // Função para alterar a quantidade de um ingrediente no modal
        function alterarQtdExtra(ingrediente, valor) {
            let quantidadeAtual = ingredientesPersonalizados[ingrediente];
            let novaQuantidade = quantidadeAtual + valor;
            
            if (ingrediente === 'hamburguer') {
                if (novaQuantidade < 1) novaQuantidade = 1;
                if (novaQuantidade > 3) novaQuantidade = 3;
            } else {
                if (novaQuantidade < 0) novaQuantidade = 0; 
                if (novaQuantidade > 5) novaQuantidade = 5; 
            }

            ingredientesPersonalizados[ingrediente] = novaQuantidade;
            atualizarDisplayIngredientes();
        }

        function atualizarDisplayIngredientes() {
            for (const ingrediente in ingredientesPersonalizados) {
                const elementoSpanId = `qtd${ingrediente.charAt(0).toUpperCase() + ingrediente.slice(1)}`;
                const elementoSpan = document.getElementById(elementoSpanId);
                
                if (elementoSpan) {
                    elementoSpan.innerText = ingredientesPersonalizados[ingrediente];
                }
            }
        }

        function salvarPersonalizacao() {
            if (currentEditingIndex > -1) {
                let cart = getCart();
                cart[currentEditingIndex].customizations = ingredientesPersonalizados;
                saveCart(cart);
            }
            fecharModalPersonalizar();
        }

        // --- Funções para o Modal de Cupom ---
        const modalCupom = document.getElementById('modalCupom');
        const cupomInput = document.getElementById('cupomInput');

        function abrirModalCupom() {
          modalCupom.style.display = 'flex';
          cupomInput.value = '';
          cupomInput.focus();
        }

        function fecharModalCupom() {
          modalCupom.style.display = 'none';
        }

        function digitarCupom(char) {
            if (char === 'DEL') {
                cupomInput.value = cupomInput.value.slice(0, -1);
            } else if (cupomInput.value.length < 10) { // Limite de 10 caracteres para o cupom
                cupomInput.value += char;
            }
        }

        function aplicarCupom() {
            const codigoCupom = cupomInput.value.trim();
            if (codigoCupom) {
                alert('Cupom "' + codigoCupom + '" aplicado! (Lógica de validação e aplicação virá no backend)');
                fecharModalCupom();
            } else {
                alert('Por favor, digite um código de cupom.');
            }
        }
    </script>
</body>
</html>