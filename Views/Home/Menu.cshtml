@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/stylePagina2.css">
    <script src="~/js/modal.js"></script>
    <title>Pedidos</title>

    
</head>
<body >
<div class="wrapper">
    <div class="containerPedidos">
        <img src="~/imgs/imgHeader.jpeg" alt="Header" class="imgHeader">
        <div class="conteudoInterno">
            <div class="colunaEsquerda">
             @foreach (var category in ViewBag.Categories)
            {
                string activeClass = category.active ? "active" : "";
                <a  href="/Menu/@category.id">
                    <div class="quadradoCategoria  @activeClass">
                        <img src="@category.icon" alt="~imgs/imgLanche.png" class="imgLancheCategoria"><!-- adicionar os links -->
                        <p class="textoCategoria">@category.name</p>
                    </div>
                </a>
            }
            </div>

            <div class="conteudoPrincipal">

                <div class="scrollmenu">
                    @foreach (var subcategory in ViewBag.SubCategories)
                    {   
                        string activeClass = subcategory.active ? "active" : "";
                        <a href="/Menu/@ViewBag.Category/@subcategory.id" class="subcategory-btn @activeClass">
                            <span class="label">@subcategory.name</span>
                        </a>
                    }
                </div>



                <div class="quadradoLanches">
                @foreach (var product in ViewBag.Products){
                    <div class="quadradoLanche" onclick="abrirModal('@product.id', '@product.name', '@product.price', 'adicionar img e descrição no banco ', '/imgs/lanche1.png')">
                        <img src="~/imgs/lanche1.png" alt="" class="lanchesFotos">
                        <p class="textoLanche1">@product.name</p>
                        <p class="preçoLanche1">@product.price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pt-BR"))</p>
                    </div>               
                }
                </div>
            </div>
        </div>

<div class="divResumoPedido">
    <div class="infoResumo">
        <p class="textoResumo">Total de itens: <strong id="total-items">0</strong></p>
        <p class="textoResumo">Total do pedido: <span class="precoResumo" id="total-price">R$ 0,00</span></p>
    </div>

    <div class="divCarrinho">
        <div class="barraContainer">
            <div class="barraPreenchida" style="width: 15%;"></div>
        </div>
        <p class="txtVerCarrinho">VER CARRINHO</p>
        <img src="~/imgs/carrinhoIcon.png" alt="Carrinho" class="imgCarrinho">
    </div>

    <div class="containerBotaoPronto">
        <a class="botao-pronto" href="@Url.Action("Tela2", "Home")">Pronto!</a>
    </div>
</div>
</div>

<div class="modal-overlay" id="modal">
    <div class="modal-content">
        <button class="modal-close" onclick="fecharModal()">X</button>
        <img id="modalImg" src="" alt="" />
        <h3 id="modalTitulo"></h3>
        <p class="modal-preco" id="modalPreco"></p>
        <div class="modal-quantidade">
            <button onclick="alterarQtd(-1)">-</button>
            <span id="modalQtd">1</span>
            <button onclick="alterarQtd(1)">+</button>
        </div>
        <p id="modalDescricao"></p>
        <button class="modal-adicionar" onclick="adicionarAoCarrinho()">Adicionar</button>
    </div>
</div>

<script>
    // Mantém o estado do modal
    let currentProduct = {};

    // Inicia ou carrega o carrinho do sessionStorage
    let cart = JSON.parse(sessionStorage.getItem('cart')) || [];

    function abrirModal(id, nome, preco, descricao, imagem) {
        currentProduct = {
            id: parseInt(id),
            name: nome,
            price: parseFloat(preco),
            description: descricao,
            image: imagem,
            quantity: 1,
            customizations: {
                hamburguer: 1,
                queijo: 0,
                bacon: 0,
                tomate: 0,
                alface: 0,
                cebola: 0,
                catupiry: 0
            }
        };

        document.getElementById('modalTitulo').innerText = currentProduct.name;
        document.getElementById('modalPreco').innerText = `R$ ${currentProduct.price.toFixed(2)}`;
        document.getElementById('modalDescricao').innerText = currentProduct.description;
        document.getElementById('modalImg').src = currentProduct.image;
        document.getElementById('modalQtd').innerText = currentProduct.quantity;
        document.getElementById('modal').style.display = 'flex';
    }

    function fecharModal() {
        document.getElementById('modal').style.display = 'none';
        currentProduct = {}; // Limpa o produto atual
    }

    function alterarQtd(amount) {
        const qtdSpan = document.getElementById('modalQtd');
        let quantity = parseInt(qtdSpan.innerText) + amount;
        if (quantity < 1) {
            quantity = 1;
        }
        currentProduct.quantity = quantity;
        qtdSpan.innerText = quantity;
    }

    function adicionarAoCarrinho() {
        const existingProductIndex = cart.findIndex(item => item.id === currentProduct.id && JSON.stringify(item.customizations) === JSON.stringify(currentProduct.customizations));

        if (existingProductIndex > -1) {
            // Se o produto já existe, atualiza a quantidade
            cart[existingProductIndex].quantity += currentProduct.quantity;
        } else {
            // Senão, adiciona o novo produto
            cart.push(currentProduct);
        }

        // Salva o carrinho no sessionStorage
        sessionStorage.setItem('cart', JSON.stringify(cart));
        
        // Atualiza a UI e fecha o modal
        atualizarResumoPedido();
        fecharModal();
    }

    function atualizarResumoPedido() {
        const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
        const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

        document.getElementById('total-items').innerText = totalItems;
        document.getElementById('total-price').innerText = totalPrice.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
    }

    // Garante que o resumo seja atualizado ao carregar a página
    document.addEventListener('DOMContentLoaded', atualizarResumoPedido);
</script>
</body>
</html>
